syntax = "proto3";
package rover.v1;

// ====================== Telemetry ======================
message GridFrame {
  uint32 width        = 1;
  uint32 height       = 2;
  float  cell_size_m  = 3;
  bytes  data         = 4;   // width*height bytes, 0..255
  uint64 t_mono_ns    = 5;   // snapshot time (monotonic ns)
}

message Pose2D {
  float  x_m          = 1;
  float  y_m          = 2;
  float  theta        = 3;   // radians (0 = +X, CCW+)
  uint64 t_mono_ns    = 4;
}

message Ack {
  uint64 received = 1;
}

service Telemetry {
  rpc PublishGrid (stream GridFrame) returns (Ack);
  rpc PublishPose (stream Pose2D)    returns (Ack);
}

// ====================== Command ======================
message TextCommand {
  string text      = 1;   // e.g. "MOVE 10cm", "ROT 90deg", "STOP"
  uint64 t_mono_ns = 2;
}

message TextReply {
  string cmd_id    = 1;   // optional correlation
  string status    = 2;   // "OK","RUNNING","DONE","ERROR"
  string message   = 3;   // human-readable
  uint64 t_mono_ns = 4;
}

service CommandLine {
  rpc Stream (stream TextReply) returns (stream TextCommand);
}