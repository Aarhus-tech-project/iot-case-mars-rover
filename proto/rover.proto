syntax = "proto3";
package rover.v1;

message Sample {
  uint32 angle_cdeg  = 1;   // 0..35999
  uint32 distance_mm = 2;   // 0..~6000
  uint32 intensity   = 3;   // 0 if unknown
  uint64 mono_ns     = 4;   // optional monotonic timestamp (ns)
}

message Scan {
  uint64 seq           = 1;
  uint64 start_mono_ns = 2;
  uint64 end_mono_ns   = 3;
  float  rpm           = 4;
  repeated Sample pts  = 5;
}

message SubscribeRequest {
  bool scans       = 1;
  uint32 max_hz    = 2;
  uint32 max_range_mm = 3;
}

message Ack { uint64 received = 1; }

service Telemetry {
  rpc SubscribeSamples(SubscribeRequest) returns (stream Sample);
  rpc SubscribeScans(SubscribeRequest) returns (stream Scan);
  rpc PublishSamples(stream Sample) returns (Ack);
  rpc PublishScans(stream Scan) returns (Ack);
}